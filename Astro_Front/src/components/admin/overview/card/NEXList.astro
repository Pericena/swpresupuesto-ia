---
const data = [
  // {
  //   title: 'Total Balance',
  //   total: '$4,156.45',
  //   iconClass: 'bx bxs-credit-card'
  // },
  // {
  //   title: 'Total Presupuesto',
  //   total: 'Bs 0.0',
  //   iconClass: 'bx bx-dollar'
  // },
  {
    title: 'Total Egreso',
    total: 'Bs 0.0',
    iconClass: 'bx bx-dollar'
  },
  {
    title: 'Total Ingreso',
    total: 'Bs 0.0',
    iconClass: 'bx bx-line-chart-down'
  }
]
---

<div class="grid grid-cols-1 gap-6 p-6 md:grid-cols-2 lg:grid-cols-4">
  <!-- For each item in data -->

  <div id="loading" class="flex h-48 items-center justify-center">
    <div class="loader h-16 w-16 rounded-full border-8 border-t-8 border-gray-200 ease-linear">
    </div>
  </div>
  <div class="text-white" id="gastosInfo"></div>
  {
    data.map((item) => (
      <div
        class="w-full rounded-md p-6 shadow-md transition duration-300 hover:shadow-lg"
        style="background: linear-gradient(135deg, #f05f22, #e53f52, #e53f52);"
      >
        <div class="mb-6 flex items-center justify-between">
          <div class="flex items-center">
            <div class="cursor-pointer rounded-full bg-white text-black transition duration-300 hover:bg-gray-200 hover:shadow-md">
              <div class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white p-3 text-center text-xl text-black shadow-lg">
                <i class={item.iconClass} />
              </div>
            </div>
            <div class="ml-2 rounded bg-emerald-500/10 p-1 text-[12px] font-semibold leading-none text-emerald-500">
              +30%
            </div>
          </div>
        </div>
        <div class="text-sm font-medium text-white">{item.title}</div>
        <a href="#" class="text-sm font-medium text-white hover:text-black">
          {item.total}
        </a>
        <div class="text-2xl font-semibold text-white">{item.total}</div>
      </div>
    ))
  }
</div>

<script is:inline>
  // Función para formatear números como moneda
  function formatCurrency(amount) {
    return new Intl.NumberFormat('es-BO', { style: 'currency', currency: 'BOB' }).format(amount)
  }

  // Consumir la API y mostrar la información en la página
  fetch('http://152.67.56.238:5000/api/gastos')
    .then((response) => response.json())
    .then((data) => {
      const { total_gastos, descripcion, categorias } = data
      const cantidadCategorias = Object.keys(categorias).length

      // Encontrar las 3 categorías con mayores gastos
      const sortedCategorias = Object.keys(categorias)
        .sort((a, b) => categorias[b] - categorias[a])
        .slice(0, 3)
      const loading = document.getElementById('loading')
      const gastosCards = document.getElementById('gastosInfo')

      // Mostrar el total de gastos
      gastosCards.innerHTML += `
        
            <div
        class="w-full rounded-md p-6 shadow-md transition duration-300 hover:shadow-lg"
        style="background: linear-gradient(135deg, #f05f22, #e53f52, #e53f52);"
      >
        <div class="mb-6 flex items-center justify-between">
          <div class="flex items-center">
            <div class="cursor-pointer rounded-full bg-white text-black transition duration-300 hover:bg-gray-200 hover:shadow-md">
              <div class="inline-flex h-10 w-10 items-center justify-center rounded-full bg-white p-3 text-center text-xl text-black shadow-lg">
                <a target="_blank" href="http://152.67.56.238:5000/gasto">
      <i class="Total Balance" />
        </a>
              </div>
            </div>
            <div class="ml-2 rounded bg-emerald-500/10 p-1 text-[12px] font-semibold leading-none text-emerald-500">
              Cantidad de Categorías:${cantidadCategorias}
            </div>
          </div>
        </div>
        <div class="text-sm font-medium text-white">Total Gasto</div>
        <a target="_blank" href="http://152.67.56.238:5000/gasto" class="text-sm font-medium text-white hover:text-black">
        ${formatCurrency(total_gastos)} <i class="bx bx-link-external"></i>
        </a>
        <div class="text-2xl font-semibold text-white">${formatCurrency(total_gastos)}</div>
      </div>
      `
      loading.classList.add('hidden')
      gastosInfo.classList.remove('hidden')
    })
    .catch((error) => {
      console.error('Error al obtener los datos:', error)
    })
</script>
