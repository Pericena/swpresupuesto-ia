type Query {
    login(email: String, password: String): Usuario
    getCategoriaById(id: String): CategoriaEntity
    getCuentaById(usuarioID: ID): [CuentaEntity]
    egreso(id: String): EgresoEntity
    ingreso(id: String): IngresoEntity
    getAllData: AllDataResponse
}

type Mutation {
    createUsuario(id:ID,nombre: String, email: String, password: String): String
    createCuenta(id: ID, nombre: String, saldo: String, usuarioID: String): String
    createEgreso(id: ID, concepto: String, monto: Float, fechaEgreso: String,cuentaID:ID ,categoriaID:ID): String
    createIngreso(id:ID,concepto:String ,monto:Float,fechaIngreso:String,cuentaID:ID,categoriaID:ID ): String
}



type Usuario {
    id: String
    nombre: String
    email: String
    password: String
    token: String
}
type CategoriaEntity {
    id: String
    nombre: String
}

type CuentaEntity {
    id: ID
    nombre: String
    saldo: Float
    usuarioID: ID
}

type EgresoEntity {
    id: ID
    concepto: String
    monto: Float
    fechaEgreso: String
    cuentaID: ID
    categoriaID: ID
}

type IngresoEntity {
    id: ID
    concepto: String
    monto: Float
    fechaIngreso: String
    cuentaID: ID
    categoriaID: ID
}

input EgresoInput {
    concepto: String
    monto: Float
    fechaEgreso: String
    cuentaID: String
    categoriaID: String
}

input IngresoInput {
    concepto: String
    monto: Float
    fechaIngreso: String
    cuentaID: String
    categoriaID: String
}
type AllDataResponse {
    cuentas: [CuentaEntity]
    ingresos: [IngresoEntity]
    egresos: [EgresoEntity]
}